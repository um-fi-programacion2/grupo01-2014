// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.canarium.web;

import ar.edu.um.canarium.domain.Persona;
import ar.edu.um.canarium.web.PersonaController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect PersonaController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByActivoNot", "form" }, method = RequestMethod.GET)
    public String PersonaController.findPersonaeByActivoNotForm(Model uiModel) {
        return "personae/findPersonaeByActivoNot";
    }
    
    @RequestMapping(params = "find=ByActivoNot", method = RequestMethod.GET)
    public String PersonaController.findPersonaeByActivoNot(@RequestParam(value = "activo", required = false) Boolean activo, Model uiModel) {
        uiModel.addAttribute("personae", Persona.findPersonaeByActivoNot(activo == null ? Boolean.FALSE : activo).getResultList());
        return "personae/list";
    }
    
    @RequestMapping(params = { "find=ByApellidoLike", "form" }, method = RequestMethod.GET)
    public String PersonaController.findPersonaeByApellidoLikeForm(Model uiModel) {
        return "personae/findPersonaeByApellidoLike";
    }
    
    @RequestMapping(params = "find=ByApellidoLike", method = RequestMethod.GET)
    public String PersonaController.findPersonaeByApellidoLike(@RequestParam("apellido") String apellido, Model uiModel) {
        uiModel.addAttribute("personae", Persona.findPersonaeByApellidoLike(apellido).getResultList());
        return "personae/list";
    }
    
    @RequestMapping(params = { "find=ByEmailLike", "form" }, method = RequestMethod.GET)
    public String PersonaController.findPersonaeByEmailLikeForm(Model uiModel) {
        return "personae/findPersonaeByEmailLike";
    }
    
    @RequestMapping(params = "find=ByEmailLike", method = RequestMethod.GET)
    public String PersonaController.findPersonaeByEmailLike(@RequestParam("email") String email, Model uiModel) {
        uiModel.addAttribute("personae", Persona.findPersonaeByEmailLike(email).getResultList());
        return "personae/list";
    }
    
    @RequestMapping(params = { "find=ByPasswordEquals", "form" }, method = RequestMethod.GET)
    public String PersonaController.findPersonaeByPasswordEqualsForm(Model uiModel) {
        return "personae/findPersonaeByPasswordEquals";
    }
    
    @RequestMapping(params = "find=ByPasswordEquals", method = RequestMethod.GET)
    public String PersonaController.findPersonaeByPasswordEquals(@RequestParam("password") String password, Model uiModel) {
        uiModel.addAttribute("personae", Persona.findPersonaeByPasswordEquals(password).getResultList());
        return "personae/list";
    }
    
    @RequestMapping(params = { "find=ByUsuarioEquals", "form" }, method = RequestMethod.GET)
    public String PersonaController.findPersonaeByUsuarioEqualsForm(Model uiModel) {
        return "personae/findPersonaeByUsuarioEquals";
    }
    
    @RequestMapping(params = "find=ByUsuarioEquals", method = RequestMethod.GET)
    public String PersonaController.findPersonaeByUsuarioEquals(@RequestParam("usuario") String usuario, Model uiModel) {
        uiModel.addAttribute("personae", Persona.findPersonaeByUsuarioEquals(usuario).getResultList());
        return "personae/list";
    }
    
}
